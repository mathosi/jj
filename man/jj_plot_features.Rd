% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jj_plot_features.R
\name{jj_plot_features}
\alias{jj_plot_features}
\title{plot features}
\usage{
jj_plot_features(
  seurat_obj = NULL,
  reduction = NULL,
  features = NULL,
  meta_features = NULL,
  assay = NULL,
  slot = "data",
  colorScale = c("viridis", "wbr", "gbr", "bry", "seurat"),
  facet_by = NULL,
  cap_top = NULL,
  cap_bottom = NULL,
  custom_colors = NULL,
  custom_theme = theme_minimal(),
  shape = 16,
  alpha = 1,
  pt.size = 0.5,
  return_gg_object = FALSE,
  my_title = NULL,
  no_legend = F,
  n_facet_rows = NULL,
  facet_subset = NULL,
  cont_or_disc = "a",
  use_pointdensity = FALSE,
  pointdensity_subset = NULL,
  order = FALSE,
  background_cells = FALSE,
  label = FALSE,
  box_col = NULL,
  convert_factors = FALSE
)
}
\arguments{
\item{seurat_obj}{optional Seurat object}

\item{reduction}{either a data.frame with embeddings in column 1+2 and further meta data or a string specifying a dimensionality reduction from the Seurat object}

\item{features}{If Seurat object is provided, extract features from the specified assay and slot}

\item{meta_features}{if Seurat object is provided, extract features from the meta.data. Otherwise extract features from the data.frame provided in \code{reduction}}

\item{assay}{assay to use from the Seurat object, default: DefaultAssay(seurat_obj)}

\item{slot}{slot to use from the Seurat object, default: data}

\item{colorScale}{color scale to use for continuous features, one of 'wbr', 'bry', 'seurat', 'viridis'}

\item{facet_by}{string specifying a meta_feature to facet by}

\item{cap_top}{upper value threshold passed to jj_cap_vals}

\item{cap_bottom}{lower value threshold passed to jj_cap_vals}

\item{custom_colors}{named vector of colours used to colour categorical features}

\item{custom_theme}{custom theme to be used, default: theme_minimal()}

\item{shape}{point shape, default: 16}

\item{alpha}{alpha value, default: 1}

\item{pt.size}{size of points, default: 0.1}

\item{return_gg_object}{return ggplot object instead of plotting, default: FALSE}

\item{my_title}{optional title for the ggplot}

\item{no_legend}{omit legend, default: FALSE}

\item{n_facet_rows}{number of rows for facetted plots}

\item{facet_subset}{Only used when facet_by not FALSE. Only plot the facets for the groups supplied here. Background cells are still shown for the whole dataset}

\item{cont_or_disc}{string of length 1 or length n features indicating whether the features are continuous 'c' or discrete 'd'. Try to set this manually, when the function fails. Otherwise, set to 'a' to automatically determine c or d for each feature.}

\item{use_pointdensity}{colour by pointdensity using the ggpointdensity package.}

\item{pointdensity_subset}{Only used if use_pointdensity=T. If NULL, use all cells. If set to groups within meta_features, only calculate density for these subgroups}

\item{order}{order points so that largest values are on top}

\item{background_cells}{when using facets, include the cells not part of the facet as grey background}

\item{label}{add boxes with labels to the discrete variable}

\item{box_col}{colour to fill boxes, if label = T. If NULL, use colours from the respective groups}
}
\description{
Extension of the functionalities provided by Seurats FeaturePlot/DimPlot functions
Can plot scatterplots of multiple features provided under \code{features} (from Seurat assay) or \code{meta_features} (from Seurat meta.data or data.frame)
Embeddings from Seurat need to be specified under \code{reduction}. Alternatively, a data.frame with the embedding coordinates in the first two columns
can be passed to \code{reduction} and seurat_obj can be set to NULL.
Loads ggplot2 and dplyr libraries.
}
\examples{
df = data.frame(umap1=c(1,5,3), umap2=c(2,5,2), fruit=c('Apple', 'Banana', 'Apple'), dish=c('Salad','Salad','Snack'))
jj_plot_features(reduction=df, meta_features=c('fruit'), pt.size=4, shape=15, my_title='fruits')
jj_plot_features(reduction=df, meta_features=c('fruit'), pt.size=4, facet_by='fruit', n_facet_rows=2)
jj_plot_features(reduction=df, meta_features=c('fruit'), pt.size=4, facet_by='dish')
jj_plot_features(reduction=df, meta_features=c('fruit'), pt.size=4, custom_colors=c(Apple='green', Banana='yellow'), label=T)
jj_plot_features(seurat_rna, features=c('CD4', 'CD8A'), cap_top='q95', colorScale='viridis')
df2 = data.frame(a=rnorm(100, 0, 5), b=rnorm(100, 0, 5), d=rbinom(100, 50, 0.3), e = sample(c('A','B', 'C'), 100, replace=T))
jj_plot_features(reduction=df2, meta_features=c('d'), pt.size=4, facet_by = 'e', background_cells = T, order=T, custom_theme = theme_bw())
jj_plot_features(reduction=df2, meta_features='e', pt.size=4, facet_by = 'e', use_pointdensity = T, order=T, custom_theme = theme_bw())
jj_plot_features(reduction=df2, meta_features='e', pt.size=4, use_pointdensity = T, pointdensity_subset = c('B','C'), order=T, custom_theme = theme_bw())
jj_plot_features(reduction=df2, meta_features='e', pt.size=4, use_pointdensity = T, pointdensity_subset = c('B','C'), background_cells=T, order=T, custom_theme = theme_bw())

}
\keyword{plot}
